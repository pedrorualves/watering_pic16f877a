

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Sep 29 13:24:30 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.44
    27                           ; Generated 14/09/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120                           
   121                           	psect	strings
   122  00B2                     __pstrings:	
   123  00B2                     stringtab:	
   124  00B2                     __stringtab:	
   125  00B2                     stringcode:	
   126                           ;	String table - string pointers are 1 byte each
   127                           
   128  00B2                     stringdir:	
   129  00B2  3000               	movlw	high stringdir
   130  00B3  008A               	movwf	10
   131  00B4  0804               	movf	4,w
   132  00B5  0A84               	incf	4,f
   133  00B6  0782               	addwf	2,f
   134  00B7                     __stringbase:	
   135  00B7  3400               	retlw	0
   136  00B8                     __end_of__stringtab:	
   137  00B8                     _MENU_HUMIDADE:	
   138  00B8  3448               	retlw	72
   139  00B9  3455               	retlw	85
   140  00BA  344D               	retlw	77
   141  00BB  3449               	retlw	73
   142  00BC  3444               	retlw	68
   143  00BD  3449               	retlw	73
   144  00BE  3454               	retlw	84
   145  00BF  3459               	retlw	89
   146  00C0  3400               	retlw	0
   147  00C1                     __end_of_MENU_HUMIDADE:	
   148  00C1                     _MENU_DURACAO:	
   149  00C1  3444               	retlw	68
   150  00C2  3455               	retlw	85
   151  00C3  3452               	retlw	82
   152  00C4  3441               	retlw	65
   153  00C5  3454               	retlw	84
   154  00C6  3449               	retlw	73
   155  00C7  344F               	retlw	79
   156  00C8  344E               	retlw	78
   157  00C9  3400               	retlw	0
   158  00CA                     __end_of_MENU_DURACAO:	
   159  00CA                     _MENU_LIGAR:	
   160  00CA  3445               	retlw	69
   161  00CB  344E               	retlw	78
   162  00CC  3441               	retlw	65
   163  00CD  3442               	retlw	66
   164  00CE  344C               	retlw	76
   165  00CF  3445               	retlw	69
   166  00D0  3400               	retlw	0
   167  00D1                     __end_of_MENU_LIGAR:	
   168  00D1                     _MENU_MANUAL:	
   169  00D1  344D               	retlw	77
   170  00D2  3441               	retlw	65
   171  00D3  344E               	retlw	78
   172  00D4  3455               	retlw	85
   173  00D5  3441               	retlw	65
   174  00D6  344C               	retlw	76
   175  00D7  3400               	retlw	0
   176  00D8                     __end_of_MENU_MANUAL:	
   177  00D8                     _MENU_CONFIGURACOES:	
   178  00D8  3443               	retlw	67
   179  00D9  344F               	retlw	79
   180  00DA  344E               	retlw	78
   181  00DB  3446               	retlw	70
   182  00DC  3449               	retlw	73
   183  00DD  3447               	retlw	71
   184  00DE  3400               	retlw	0
   185  00DF                     __end_of_MENU_CONFIGURACOES:	
   186  00DF                     _MENU_ESTADO:	
   187  00DF  3453               	retlw	83
   188  00E0  3454               	retlw	84
   189  00E1  3441               	retlw	65
   190  00E2  3454               	retlw	84
   191  00E3  3445               	retlw	69
   192  00E4  3400               	retlw	0
   193  00E5                     __end_of_MENU_ESTADO:	
   194  00E5                     _MENU_HORA:	
   195  00E5  3448               	retlw	72
   196  00E6  344F               	retlw	79
   197  00E7  3455               	retlw	85
   198  00E8  3452               	retlw	82
   199  00E9  3400               	retlw	0
   200  00EA                     __end_of_MENU_HORA:	
   201  00EA                     _MENU_ZONA:	
   202  00EA  345A               	retlw	90
   203  00EB  344F               	retlw	79
   204  00EC  344E               	retlw	78
   205  00ED  3445               	retlw	69
   206  00EE  3400               	retlw	0
   207  00EF                     __end_of_MENU_ZONA:	
   208                           
   209                           	psect	nvBANK0
   210  004E                     __pnvBANK0:	
   211  004E                     _LED_Z4:	
   212  004E                     	ds	2
   213  0050                     _LED_Z3:	
   214  0050                     	ds	2
   215  0052                     _LED_Z2:	
   216  0052                     	ds	2
   217  0054                     _LED_Z1:	
   218  0054                     	ds	2
   219  0056                     _LED_ON:	
   220  0056                     	ds	2
   221  0001                     _TMR0	set	1
   222  000B                     _INTCON	set	11
   223  0008                     _PORTD	set	8
   224  005F                     _GIE	set	95
   225  005D                     _T0IE	set	93
   226  0034                     _RB4	set	52
   227  0033                     _RB3	set	51
   228  0032                     _RB2	set	50
   229  0031                     _RB1	set	49
   230  0059                     _INTF	set	89
   231  005A                     _T0IF	set	90
   232  0044                     _RD4	set	68
   233  0043                     _RD3	set	67
   234  0042                     _RD2	set	66
   235  0041                     _RD1	set	65
   236  0040                     _RD0	set	64
   237  0081                     _OPTION_REG	set	129
   238  0086                     _TRISB	set	134
   239  0088                     _TRISD	set	136
   240                           
   241                           ; #config settings
   242  0000                     
   243                           	psect	cinit
   244  0015                     start_initialization:	
   245  0015                     __initialization:	
   246                           
   247                           ; Clear objects allocated to COMMON
   248  0015  3070               	movlw	low __pbssCOMMON
   249  0016  0084               	movwf	4
   250  0017  3079               	movlw	low (__pbssCOMMON+9)
   251  0018  120A  118A  21C8  120A  118A  	fcall	clear_ram0
   252                           
   253                           ; Clear objects allocated to BANK0
   254  001D  1383               	bcf	3,7	;select IRP bank0
   255  001E  3020               	movlw	low __pbssBANK0
   256  001F  0084               	movwf	4
   257  0020  304E               	movlw	low (__pbssBANK0+46)
   258  0021  120A  118A  21C8   	fcall	clear_ram0
   259  0024                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  0024                     __end_of__initialization:	
   263  0024  0183               	clrf	3
   264  0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMMON
   267  0070                     __pbssCOMMON:	
   268  0070                     _minCounter:	
   269  0070                     	ds	2
   270  0072                     _secCounter:	
   271  0072                     	ds	2
   272  0074                     _msCounter:	
   273  0074                     	ds	2
   274  0076                     _menuSTATES:	
   275  0076                     	ds	1
   276  0077                     _wateringSTATES:	
   277  0077                     	ds	1
   278  0078                     _bootDONE:	
   279  0078                     	ds	1
   280                           
   281                           	psect	bssBANK0
   282  0020                     __pbssBANK0:	
   283  0020                     _Z4:	
   284  0020                     	ds	8
   285  0028                     _Z3:	
   286  0028                     	ds	8
   287  0030                     _Z2:	
   288  0030                     	ds	8
   289  0038                     _Z1:	
   290  0038                     	ds	8
   291  0040                     _timer20ms:	
   292  0040                     	ds	2
   293  0042                     _dayCounter:	
   294  0042                     	ds	2
   295  0044                     _hrCounter:	
   296  0044                     	ds	2
   297  0046                     _STATE_Z4:	
   298  0046                     	ds	2
   299  0048                     _STATE_Z3:	
   300  0048                     	ds	2
   301  004A                     _STATE_Z2:	
   302  004A                     	ds	2
   303  004C                     _STATE_Z1:	
   304  004C                     	ds	2
   305                           
   306                           	psect	clrtext
   307  01C8                     clear_ram0:	
   308                           ;	Called with FSR containing the base address, and
   309                           ;	W with the last address+1
   310                           
   311  01C8  0064               	clrwdt	;clear the watchdog before getting into this loop
   312  01C9                     clrloop0:	
   313  01C9  0180               	clrf	0	;clear RAM location pointed to by FSR
   314  01CA  0A84               	incf	4,f	;increment pointer
   315  01CB  0604               	xorwf	4,w	;XOR with final address
   316  01CC  1903               	btfsc	3,2	;have we reached the end yet?
   317  01CD  3400               	retlw	0	;all done for this memory range, return
   318  01CE  0604               	xorwf	4,w	;XOR again to restore value
   319  01CF  29C9               	goto	clrloop0	;do the next byte
   320                           
   321                           	psect	cstackCOMMON
   322  0079                     __pcstackCOMMON:	
   323  0079                     ?_HardwareConfiguration:	
   324  0079                     ?_SoftwareConfiguration:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0079                     ?_Init1msecTimerInterrupt:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0079                     ?_InitExternal_INT:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0079                     ?_LedProcess:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0079                     ?_ProcessWATERINGStates:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0079                     ?_ProcessMENUStates:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0079                     ?_UpdateTimeCounters:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0079                     ?_ISR:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0079                     ??_ISR:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0079                     ?_InitTimer0:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0079                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357                           
   358                           ; 2 bytes @ 0x0
   359  0079                     	ds	4
   360                           
   361                           	psect	cstackBANK0
   362  0058                     __pcstackBANK0:	
   363  0058                     ??_HardwareConfiguration:	
   364  0058                     ??_SoftwareConfiguration:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0058                     ??_InitExternal_INT:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0058                     ??_LedProcess:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0058                     ??_ProcessWATERINGStates:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0058                     ??_ProcessMENUStates:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0058                     ??_UpdateTimeCounters:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0058                     ??_InitTimer0:	
   383                           ; 1 bytes @ 0x0
   384                           
   385                           
   386                           ; 1 bytes @ 0x0
   387  0058                     	ds	1
   388  0059                     ??_Init1msecTimerInterrupt:	
   389  0059                     ??_main:	
   390                           ; 1 bytes @ 0x1
   391                           
   392                           
   393                           	psect	maintext
   394  0028                     __pmaintext:	
   395                           ; 1 bytes @ 0x1
   396 ;;
   397 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   398 ;;
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 121 in file "WateringSystem.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  2  118[None  ] int 
   408 ;; Registers used:
   409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : B00/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels required when called:    3
   421 ;; This function calls:
   422 ;;		_HardwareConfiguration
   423 ;;		_Init1msecTimerInterrupt
   424 ;;		_InitExternal_INT
   425 ;;		_LedProcess
   426 ;;		_ProcessMENUStates
   427 ;;		_ProcessWATERINGStates
   428 ;;		_SoftwareConfiguration
   429 ;;		_UpdateTimeCounters
   430 ;; This function is called by:
   431 ;;		Startup code after reset
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function _main
   437  0028                     _main:	
   438                           
   439                           ;WateringSystem.c: 122: HardwareConfiguration();
   440                           
   441                           ;incstack = 0
   442                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   443  0028  120A  118A  215A  120A  118A  	fcall	_HardwareConfiguration
   444                           
   445                           ;WateringSystem.c: 123: SoftwareConfiguration();
   446  002D  120A  118A  20EF  120A  118A  	fcall	_SoftwareConfiguration
   447                           
   448                           ;WateringSystem.c: 124: Init1msecTimerInterrupt();
   449  0032  120A  118A  21D0  120A  118A  	fcall	_Init1msecTimerInterrupt
   450                           
   451                           ;WateringSystem.c: 125: InitExternal_INT();
   452  0037  120A  118A  21BE  120A  118A  	fcall	_InitExternal_INT
   453  003C                     l975:	
   454                           ;WateringSystem.c: 128: while (1){
   455                           
   456                           
   457                           ;WateringSystem.c: 131: LedProcess();
   458  003C  120A  118A  212A  120A  118A  	fcall	_LedProcess
   459                           
   460                           ;WateringSystem.c: 138: if(timer20ms == 20){
   461  0041  3014               	movlw	20
   462  0042  1283               	bcf	3,5	;RP0=0, select bank0
   463  0043  1303               	bcf	3,6	;RP1=0, select bank0
   464  0044  0640               	xorwf	_timer20ms,w
   465  0045  0441               	iorwf	_timer20ms+1,w
   466  0046  1D03               	btfss	3,2
   467  0047  2856               	goto	l983
   468                           
   469                           ;WateringSystem.c: 139: ProcessWATERINGStates();
   470  0048  120A  118A  2197  120A  118A  	fcall	_ProcessWATERINGStates
   471                           
   472                           ;WateringSystem.c: 140: ProcessMENUStates();
   473  004D  120A  118A  21A7  120A  118A  	fcall	_ProcessMENUStates
   474                           
   475                           ;WateringSystem.c: 141: timer20ms=0;
   476  0052  1283               	bcf	3,5	;RP0=0, select bank0
   477  0053  1303               	bcf	3,6	;RP1=0, select bank0
   478  0054  01C0               	clrf	_timer20ms
   479  0055  01C1               	clrf	_timer20ms+1
   480  0056                     l983:	
   481                           
   482                           ;WateringSystem.c: 142: }
   483                           ;WateringSystem.c: 148: if(msCounter == 1000 && !bootDONE){
   484  0056  30E8               	movlw	232
   485  0057  0674               	xorwf	_msCounter,w
   486  0058  3003               	movlw	3
   487  0059  1903               	skipnz
   488  005A  0675               	xorwf	_msCounter+1,w
   489  005B  1D03               	btfss	3,2
   490  005C  286A               	goto	l991
   491  005D  0878               	movf	_bootDONE,w
   492  005E  1D03               	btfss	3,2
   493  005F  286A               	goto	l991
   494                           
   495                           ;WateringSystem.c: 149: bootDONE = 1;
   496  0060  01F8               	clrf	_bootDONE
   497  0061  0AF8               	incf	_bootDONE,f
   498                           
   499                           ;WateringSystem.c: 151: LED_Z1 = 0;
   500  0062  01D4               	clrf	_LED_Z1
   501  0063  01D5               	clrf	_LED_Z1+1
   502                           
   503                           ;WateringSystem.c: 152: LED_Z2 = 0;
   504  0064  01D2               	clrf	_LED_Z2
   505  0065  01D3               	clrf	_LED_Z2+1
   506                           
   507                           ;WateringSystem.c: 153: LED_Z3 = 0;
   508  0066  01D0               	clrf	_LED_Z3
   509  0067  01D1               	clrf	_LED_Z3+1
   510                           
   511                           ;WateringSystem.c: 154: LED_Z4 = 0;
   512  0068  01CE               	clrf	_LED_Z4
   513  0069  01CF               	clrf	_LED_Z4+1
   514  006A                     l991:	
   515                           
   516                           ;WateringSystem.c: 155: }
   517                           ;WateringSystem.c: 158: UpdateTimeCounters();
   518  006A  120A  118A  2070  120A  118A  	fcall	_UpdateTimeCounters
   519  006F  283C               	goto	l975
   520  0070                     __end_of_main:	
   521                           ;WateringSystem.c: 159: }
   522                           ;WateringSystem.c: 162: return (1);
   523                           ;	Return value of _main is never used
   524                           
   525                           
   526                           	psect	text1
   527  0070                     __ptext1:	
   528 ;; *************** function _UpdateTimeCounters *****************
   529 ;; Defined at:
   530 ;;		line 326 in file "WateringSystem.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _UpdateTimeCounters
   560  0070                     _UpdateTimeCounters:	
   561                           
   562                           ;WateringSystem.c: 328: if (msCounter==1000)
   563                           
   564                           ;incstack = 0
   565                           ; Regs used in _UpdateTimeCounters: [wreg+status,2+status,0]
   566  0070  30E8               	movlw	232
   567  0071  0674               	xorwf	_msCounter,w
   568  0072  3003               	movlw	3
   569  0073  1903               	skipnz
   570  0074  0675               	xorwf	_msCounter+1,w
   571  0075  1D03               	btfss	3,2
   572  0076  287F               	goto	l951
   573                           
   574                           ;WateringSystem.c: 329: {
   575                           ;WateringSystem.c: 330: secCounter++;
   576  0077  3001               	movlw	1
   577  0078  07F2               	addwf	_secCounter,f
   578  0079  1803               	skipnc
   579  007A  0AF3               	incf	_secCounter+1,f
   580  007B  3000               	movlw	0
   581  007C  07F3               	addwf	_secCounter+1,f
   582                           
   583                           ;WateringSystem.c: 331: msCounter=0;
   584  007D  01F4               	clrf	_msCounter
   585  007E  01F5               	clrf	_msCounter+1
   586  007F                     l951:	
   587                           
   588                           ;WateringSystem.c: 332: }
   589                           ;WateringSystem.c: 334: if(secCounter==60)
   590  007F  303C               	movlw	60
   591  0080  0672               	xorwf	_secCounter,w
   592  0081  0473               	iorwf	_secCounter+1,w
   593  0082  1D03               	btfss	3,2
   594  0083  288C               	goto	l957
   595                           
   596                           ;WateringSystem.c: 335: {
   597                           ;WateringSystem.c: 336: minCounter++;
   598  0084  3001               	movlw	1
   599  0085  07F0               	addwf	_minCounter,f
   600  0086  1803               	skipnc
   601  0087  0AF1               	incf	_minCounter+1,f
   602  0088  3000               	movlw	0
   603  0089  07F1               	addwf	_minCounter+1,f
   604                           
   605                           ;WateringSystem.c: 337: secCounter=0;
   606  008A  01F2               	clrf	_secCounter
   607  008B  01F3               	clrf	_secCounter+1
   608  008C                     l957:	
   609                           
   610                           ;WateringSystem.c: 338: }
   611                           ;WateringSystem.c: 340: if(minCounter==60)
   612  008C  303C               	movlw	60
   613  008D  0670               	xorwf	_minCounter,w
   614  008E  0471               	iorwf	_minCounter+1,w
   615  008F  1D03               	btfss	3,2
   616  0090  289B               	goto	l963
   617                           
   618                           ;WateringSystem.c: 341: {
   619                           ;WateringSystem.c: 342: hrCounter++;
   620  0091  3001               	movlw	1
   621  0092  1283               	bcf	3,5	;RP0=0, select bank0
   622  0093  1303               	bcf	3,6	;RP1=0, select bank0
   623  0094  07C4               	addwf	_hrCounter,f
   624  0095  1803               	skipnc
   625  0096  0AC5               	incf	_hrCounter+1,f
   626  0097  3000               	movlw	0
   627  0098  07C5               	addwf	_hrCounter+1,f
   628                           
   629                           ;WateringSystem.c: 343: minCounter=0;
   630  0099  01F0               	clrf	_minCounter
   631  009A  01F1               	clrf	_minCounter+1
   632  009B                     l963:	
   633                           
   634                           ;WateringSystem.c: 344: }
   635                           ;WateringSystem.c: 346: if(hrCounter==24)
   636  009B  3018               	movlw	24
   637  009C  1283               	bcf	3,5	;RP0=0, select bank0
   638  009D  1303               	bcf	3,6	;RP1=0, select bank0
   639  009E  0644               	xorwf	_hrCounter,w
   640  009F  0445               	iorwf	_hrCounter+1,w
   641  00A0  1D03               	btfss	3,2
   642  00A1  28AA               	goto	l969
   643                           
   644                           ;WateringSystem.c: 347: {
   645                           ;WateringSystem.c: 348: hrCounter = 0;
   646  00A2  01C4               	clrf	_hrCounter
   647  00A3  01C5               	clrf	_hrCounter+1
   648                           
   649                           ;WateringSystem.c: 349: dayCounter++;
   650  00A4  3001               	movlw	1
   651  00A5  07C2               	addwf	_dayCounter,f
   652  00A6  1803               	skipnc
   653  00A7  0AC3               	incf	_dayCounter+1,f
   654  00A8  3000               	movlw	0
   655  00A9  07C3               	addwf	_dayCounter+1,f
   656  00AA                     l969:	
   657                           
   658                           ;WateringSystem.c: 350: }
   659                           ;WateringSystem.c: 351: if(dayCounter==6)
   660  00AA  3006               	movlw	6
   661  00AB  0642               	xorwf	_dayCounter,w
   662  00AC  0443               	iorwf	_dayCounter+1,w
   663  00AD  1D03               	btfss	3,2
   664  00AE  0008               	return
   665                           
   666                           ;WateringSystem.c: 352: {
   667                           ;WateringSystem.c: 353: dayCounter = 0;
   668  00AF  01C2               	clrf	_dayCounter
   669  00B0  01C3               	clrf	_dayCounter+1
   670  00B1  0008               	return
   671  00B2                     __end_of_UpdateTimeCounters:	
   672                           
   673                           	psect	text2
   674  00EF                     __ptext2:	
   675 ;; *************** function _SoftwareConfiguration *****************
   676 ;; Defined at:
   677 ;;		line 182 in file "WateringSystem.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _SoftwareConfiguration
   707  00EF                     _SoftwareConfiguration:	
   708                           
   709                           ;WateringSystem.c: 185: Z1.enable = 0;
   710                           
   711                           ;incstack = 0
   712                           ; Regs used in _SoftwareConfiguration: [wreg+status,2]
   713  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   714  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   715  00F1  01B8               	clrf	_Z1
   716  00F2  01B9               	clrf	_Z1+1
   717                           
   718                           ;WateringSystem.c: 186: Z1.duration = 30;
   719  00F3  301E               	movlw	30
   720  00F4  00BC               	movwf	_Z1+4
   721  00F5  3000               	movlw	0
   722  00F6  00BD               	movwf	_Z1+5
   723                           
   724                           ;WateringSystem.c: 187: Z1.beginTIME = 1;
   725  00F7  3001               	movlw	1
   726  00F8  00BA               	movwf	_Z1+2
   727  00F9  3000               	movlw	0
   728  00FA  00BB               	movwf	_Z1+3
   729                           
   730                           ;WateringSystem.c: 188: Z1.humidityLIMIT = 100;
   731  00FB  3064               	movlw	100
   732  00FC  00BE               	movwf	_Z1+6
   733  00FD  3000               	movlw	0
   734  00FE  00BF               	movwf	_Z1+7
   735                           
   736                           ;WateringSystem.c: 191: Z2.enable = 0;
   737  00FF  01B0               	clrf	_Z2
   738  0100  01B1               	clrf	_Z2+1
   739                           
   740                           ;WateringSystem.c: 192: Z2.duration = 1;
   741  0101  3001               	movlw	1
   742  0102  00B4               	movwf	_Z2+4
   743  0103  3000               	movlw	0
   744  0104  00B5               	movwf	_Z2+5
   745                           
   746                           ;WateringSystem.c: 193: Z2.beginTIME = 1;
   747  0105  3001               	movlw	1
   748  0106  00B2               	movwf	_Z2+2
   749  0107  3000               	movlw	0
   750  0108  00B3               	movwf	_Z2+3
   751                           
   752                           ;WateringSystem.c: 194: Z2.humidityLIMIT = 100;
   753  0109  3064               	movlw	100
   754  010A  00B6               	movwf	_Z2+6
   755  010B  3000               	movlw	0
   756  010C  00B7               	movwf	_Z2+7
   757                           
   758                           ;WateringSystem.c: 197: Z3.enable = 0;
   759  010D  01A8               	clrf	_Z3
   760  010E  01A9               	clrf	_Z3+1
   761                           
   762                           ;WateringSystem.c: 198: Z3.duration = 1;
   763  010F  3001               	movlw	1
   764  0110  00AC               	movwf	_Z3+4
   765  0111  3000               	movlw	0
   766  0112  00AD               	movwf	_Z3+5
   767                           
   768                           ;WateringSystem.c: 199: Z3.beginTIME = 1;
   769  0113  3001               	movlw	1
   770  0114  00AA               	movwf	_Z3+2
   771  0115  3000               	movlw	0
   772  0116  00AB               	movwf	_Z3+3
   773                           
   774                           ;WateringSystem.c: 200: Z3.humidityLIMIT = 100;
   775  0117  3064               	movlw	100
   776  0118  00AE               	movwf	_Z3+6
   777  0119  3000               	movlw	0
   778  011A  00AF               	movwf	_Z3+7
   779                           
   780                           ;WateringSystem.c: 203: Z4.enable = 0;
   781  011B  01A0               	clrf	_Z4
   782  011C  01A1               	clrf	_Z4+1
   783                           
   784                           ;WateringSystem.c: 204: Z4.duration = 1;
   785  011D  3001               	movlw	1
   786  011E  00A4               	movwf	_Z4+4
   787  011F  3000               	movlw	0
   788  0120  00A5               	movwf	_Z4+5
   789                           
   790                           ;WateringSystem.c: 205: Z4.beginTIME = 1;
   791  0121  3001               	movlw	1
   792  0122  00A2               	movwf	_Z4+2
   793  0123  3000               	movlw	0
   794  0124  00A3               	movwf	_Z4+3
   795                           
   796                           ;WateringSystem.c: 206: Z4.humidityLIMIT = 100;
   797  0125  3064               	movlw	100
   798  0126  00A6               	movwf	_Z4+6
   799  0127  3000               	movlw	0
   800  0128  00A7               	movwf	_Z4+7
   801  0129  0008               	return
   802  012A                     __end_of_SoftwareConfiguration:	
   803                           
   804                           	psect	text3
   805  0197                     __ptext3:	
   806 ;; *************** function _ProcessWATERINGStates *****************
   807 ;; Defined at:
   808 ;;		line 214 in file "WateringSystem.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0
   825 ;;      Totals:         0       0       0       0       0
   826 ;;Total ram usage:        0 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _ProcessWATERINGStates
   838  0197                     _ProcessWATERINGStates:	
   839                           
   840                           ;WateringSystem.c: 215: switch(wateringSTATES){
   841                           
   842                           ;incstack = 0
   843                           ; Regs used in _ProcessWATERINGStates: [wreg-fsr0h+status,2+status,0]
   844  0197  299B               	goto	l937
   845  0198                     l134:	
   846                           ;WateringSystem.c: 216: case(WATERING_SETUP):
   847                           
   848                           
   849                           ;WateringSystem.c: 217: wateringSTATES=WATERING_IDLE;
   850  0198  01F7               	clrf	_wateringSTATES
   851  0199  0AF7               	incf	_wateringSTATES,f
   852                           
   853                           ;WateringSystem.c: 223: }
   854                           
   855                           ;WateringSystem.c: 222: case(WATERING_ON): break;
   856                           
   857                           ;WateringSystem.c: 221: break;
   858                           
   859                           ;WateringSystem.c: 219: case(WATERING_IDLE):
   860                           
   861                           ;WateringSystem.c: 218: break;
   862  019A  0008               	return
   863  019B                     l937:	
   864  019B  0877               	movf	_wateringSTATES,w
   865                           
   866                           ; Switch size 1, requested type "space"
   867                           ; Number of cases is 3, Range of values is 0 to 2
   868                           ; switch strategies available:
   869                           ; Name         Instructions Cycles
   870                           ; simple_byte           10     6 (average)
   871                           ; direct_byte           17     8 (fixed)
   872                           ; jumptable            260     6 (fixed)
   873                           ;	Chosen strategy is simple_byte
   874  019C  3A00               	xorlw	0	; case 0
   875  019D  1903               	skipnz
   876  019E  2998               	goto	l134
   877  019F  3A01               	xorlw	1	; case 1
   878  01A0  1903               	skipnz
   879  01A1  29A6               	goto	l138
   880  01A2  3A03               	xorlw	3	; case 2
   881  01A3  1903               	skipnz
   882  01A4  29A6               	goto	l138
   883  01A5  29A6               	goto	l138
   884  01A6                     l138:	
   885  01A6  0008               	return
   886  01A7                     __end_of_ProcessWATERINGStates:	
   887                           
   888                           	psect	text4
   889  01A7                     __ptext4:	
   890 ;; *************** function _ProcessMENUStates *****************
   891 ;; Defined at:
   892 ;;		line 229 in file "WateringSystem.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           
   921                           ;psect for function _ProcessMENUStates
   922  01A7                     _ProcessMENUStates:	
   923                           
   924                           ;WateringSystem.c: 237: }
   925                           
   926                           ;WateringSystem.c: 236: case(CONFIG_MENU): break;
   927                           
   928                           ;WateringSystem.c: 235: break;
   929                           
   930                           ;WateringSystem.c: 233: case(MANUAL_MENU):
   931                           
   932                           ;WateringSystem.c: 232: break;
   933                           
   934                           ;WateringSystem.c: 231: case(FIRST_MENU):
   935                           
   936                           ;WateringSystem.c: 230: switch(menuSTATES){
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _ProcessMENUStates: [wreg-fsr0h+status,2+status,0]
   940  01A7  0876               	movf	_menuSTATES,w
   941                           
   942                           ; Switch size 1, requested type "space"
   943                           ; Number of cases is 3, Range of values is 0 to 2
   944                           ; switch strategies available:
   945                           ; Name         Instructions Cycles
   946                           ; simple_byte           10     6 (average)
   947                           ; direct_byte           17     8 (fixed)
   948                           ; jumptable            260     6 (fixed)
   949                           ;	Chosen strategy is simple_byte
   950  01A8  3A00               	xorlw	0	; case 0
   951  01A9  1903               	skipnz
   952  01AA  29B2               	goto	l146
   953  01AB  3A01               	xorlw	1	; case 1
   954  01AC  1903               	skipnz
   955  01AD  29B2               	goto	l146
   956  01AE  3A03               	xorlw	3	; case 2
   957  01AF  1903               	skipnz
   958  01B0  29B2               	goto	l146
   959  01B1  29B2               	goto	l146
   960  01B2                     l146:	
   961  01B2  0008               	return
   962  01B3                     __end_of_ProcessMENUStates:	
   963                           
   964                           	psect	text5
   965  012A                     __ptext5:	
   966 ;; *************** function _LedProcess *****************
   967 ;; Defined at:
   968 ;;		line 248 in file "WateringSystem.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		None
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _LedProcess
   998  012A                     _LedProcess:	
   999                           
  1000                           ;WateringSystem.c: 249: RD0 = LED_ON;
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _LedProcess: []
  1004  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1005  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1006  012C  1C56               	btfss	_LED_ON,0
  1007  012D  2932               	goto	u410
  1008  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1009  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0130  1408               	bsf	8,0	;volatile
  1011  0131  2935               	goto	u424
  1012  0132                     u410:	
  1013  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0134  1008               	bcf	8,0	;volatile
  1016  0135                     u424:	
  1017                           
  1018                           ;WateringSystem.c: 250: RD1 = LED_Z1;
  1019  0135  1C54               	btfss	_LED_Z1,0
  1020  0136  293B               	goto	u430
  1021  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0139  1488               	bsf	8,1	;volatile
  1024  013A  293E               	goto	u444
  1025  013B                     u430:	
  1026  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1027  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1028  013D  1088               	bcf	8,1	;volatile
  1029  013E                     u444:	
  1030                           
  1031                           ;WateringSystem.c: 251: RD2 = LED_Z2;
  1032  013E  1C52               	btfss	_LED_Z2,0
  1033  013F  2944               	goto	u450
  1034  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0142  1508               	bsf	8,2	;volatile
  1037  0143  2947               	goto	u464
  1038  0144                     u450:	
  1039  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0146  1108               	bcf	8,2	;volatile
  1042  0147                     u464:	
  1043                           
  1044                           ;WateringSystem.c: 252: RD3 = LED_Z3;
  1045  0147  1C50               	btfss	_LED_Z3,0
  1046  0148  294D               	goto	u470
  1047  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1048  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1049  014B  1588               	bsf	8,3	;volatile
  1050  014C  2950               	goto	u484
  1051  014D                     u470:	
  1052  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1053  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1054  014F  1188               	bcf	8,3	;volatile
  1055  0150                     u484:	
  1056                           
  1057                           ;WateringSystem.c: 253: RD4 = LED_Z4;
  1058  0150  1C4E               	btfss	_LED_Z4,0
  1059  0151  2956               	goto	u490
  1060  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0154  1608               	bsf	8,4	;volatile
  1063  0155  0008               	return
  1064  0156                     u490:	
  1065  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0158  1208               	bcf	8,4	;volatile
  1068  0159  0008               	return
  1069  015A                     __end_of_LedProcess:	
  1070                           
  1071                           	psect	text6
  1072  01BE                     __ptext6:	
  1073 ;; *************** function _InitExternal_INT *****************
  1074 ;; Defined at:
  1075 ;;		line 261 in file "WateringSystem.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          0       1       0       0       0
  1092 ;;      Totals:         0       1       0       0       0
  1093 ;;Total ram usage:        1 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _InitExternal_INT
  1105  01BE                     _InitExternal_INT:	
  1106                           
  1107                           ;WateringSystem.c: 263: INTCON |= 0X90;
  1108                           
  1109                           ;incstack = 0
  1110                           ; Regs used in _InitExternal_INT: [wreg+status,2+status,0]
  1111  01BE  3090               	movlw	144
  1112  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1113  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1114  01C1  00D8               	movwf	??_InitExternal_INT
  1115  01C2  0858               	movf	??_InitExternal_INT,w
  1116  01C3  048B               	iorwf	11,f	;volatile
  1117                           
  1118                           ;WateringSystem.c: 264: OPTION_REG |= 0X40;
  1119  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  1120  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  1121  01C6  1701               	bsf	1,6	;volatile
  1122  01C7  0008               	return
  1123  01C8                     __end_of_InitExternal_INT:	
  1124                           
  1125                           	psect	text7
  1126  01D0                     __ptext7:	
  1127 ;; *************** function _Init1msecTimerInterrupt *****************
  1128 ;; Defined at:
  1129 ;;		line 318 in file "WateringSystem.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, pclath, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1143 ;;      Params:         0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    2
  1150 ;; This function calls:
  1151 ;;		_InitTimer0
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _Init1msecTimerInterrupt
  1159  01D0                     _Init1msecTimerInterrupt:	
  1160                           
  1161                           ;WateringSystem.c: 319: InitTimer0();
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _Init1msecTimerInterrupt: [wreg+status,2+status,0+pclath+cstack]
  1165  01D0  120A  118A  21B3   	fcall	_InitTimer0
  1166  01D3  0008               	return
  1167  01D4                     __end_of_Init1msecTimerInterrupt:	
  1168                           
  1169                           	psect	text8
  1170  01B3                     __ptext8:	
  1171 ;; *************** function _InitTimer0 *****************
  1172 ;; Defined at:
  1173 ;;		line 311 in file "WateringSystem.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0
  1189 ;;      Temps:          0       1       0       0       0
  1190 ;;      Totals:         0       1       0       0       0
  1191 ;;Total ram usage:        1 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    1
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_Init1msecTimerInterrupt
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _InitTimer0
  1203  01B3                     _InitTimer0:	
  1204                           
  1205                           ;WateringSystem.c: 312: OPTION_REG &= 0xC1;
  1206                           
  1207                           ;incstack = 0
  1208                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
  1209  01B3  30C1               	movlw	193
  1210  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1211  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1212  01B6  00D8               	movwf	??_InitTimer0
  1213  01B7  0858               	movf	??_InitTimer0,w
  1214  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1215  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1216  01BA  0581               	andwf	1,f	;volatile
  1217                           
  1218                           ;WateringSystem.c: 314: T0IE = 1;
  1219  01BB  168B               	bsf	11,5	;volatile
  1220                           
  1221                           ;WateringSystem.c: 315: GIE = 1;
  1222  01BC  178B               	bsf	11,7	;volatile
  1223  01BD  0008               	return
  1224  01BE                     __end_of_InitTimer0:	
  1225                           
  1226                           	psect	text9
  1227  015A                     __ptext9:	
  1228 ;; *************** function _HardwareConfiguration *****************
  1229 ;; Defined at:
  1230 ;;		line 166 in file "WateringSystem.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _HardwareConfiguration
  1260  015A                     _HardwareConfiguration:	
  1261                           
  1262                           ;WateringSystem.c: 167: PORTD = 0x00 ;
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in _HardwareConfiguration: [wreg+status,2]
  1266  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1267  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1268  015C  0188               	clrf	8	;volatile
  1269                           
  1270                           ;WateringSystem.c: 168: TRISD = 0x00 ;
  1271  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1272  015E  1303               	bcf	3,6	;RP1=0, select bank1
  1273  015F  0188               	clrf	8	;volatile
  1274                           
  1275                           ;WateringSystem.c: 170: TRISB = 0xFF;
  1276  0160  30FF               	movlw	255
  1277  0161  0086               	movwf	6	;volatile
  1278                           
  1279                           ;WateringSystem.c: 173: LED_ON = 1;
  1280  0162  3001               	movlw	1
  1281  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0165  00D6               	movwf	_LED_ON
  1284  0166  3000               	movlw	0
  1285  0167  00D7               	movwf	_LED_ON+1
  1286                           
  1287                           ;WateringSystem.c: 174: LED_Z1 = 1;
  1288  0168  3001               	movlw	1
  1289  0169  00D4               	movwf	_LED_Z1
  1290  016A  3000               	movlw	0
  1291  016B  00D5               	movwf	_LED_Z1+1
  1292                           
  1293                           ;WateringSystem.c: 175: LED_Z2 = 1;
  1294  016C  3001               	movlw	1
  1295  016D  00D2               	movwf	_LED_Z2
  1296  016E  3000               	movlw	0
  1297  016F  00D3               	movwf	_LED_Z2+1
  1298                           
  1299                           ;WateringSystem.c: 176: LED_Z3 = 1;
  1300  0170  3001               	movlw	1
  1301  0171  00D0               	movwf	_LED_Z3
  1302  0172  3000               	movlw	0
  1303  0173  00D1               	movwf	_LED_Z3+1
  1304                           
  1305                           ;WateringSystem.c: 177: LED_Z4 = 1;
  1306  0174  3001               	movlw	1
  1307  0175  00CE               	movwf	_LED_Z4
  1308  0176  3000               	movlw	0
  1309  0177  00CF               	movwf	_LED_Z4+1
  1310  0178  0008               	return
  1311  0179                     __end_of_HardwareConfiguration:	
  1312                           
  1313                           	psect	text10
  1314  0179                     __ptext10:	
  1315 ;; *************** function _ISR *****************
  1316 ;; Defined at:
  1317 ;;		line 269 in file "WateringSystem.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0
  1333 ;;      Temps:          4       0       0       0       0
  1334 ;;      Totals:         4       0       0       0       0
  1335 ;;Total ram usage:        4 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		Interrupt level 1
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _ISR
  1346  0179                     _ISR:	
  1347                           
  1348                           ;WateringSystem.c: 272: if(T0IF){
  1349  0179  1D0B               	btfss	11,2	;volatile
  1350  017A  298A               	goto	i1l877
  1351                           
  1352                           ;WateringSystem.c: 273: TMR0 = 0x08;
  1353  017B  3008               	movlw	8
  1354  017C  0081               	movwf	1	;volatile
  1355                           
  1356                           ;WateringSystem.c: 274: T0IF = 0;
  1357  017D  110B               	bcf	11,2	;volatile
  1358                           
  1359                           ;WateringSystem.c: 275: msCounter++;
  1360  017E  3001               	movlw	1
  1361  017F  07F4               	addwf	_msCounter,f
  1362  0180  1803               	skipnc
  1363  0181  0AF5               	incf	_msCounter+1,f
  1364  0182  3000               	movlw	0
  1365  0183  07F5               	addwf	_msCounter+1,f
  1366                           
  1367                           ;WateringSystem.c: 276: timer20ms++;
  1368  0184  3001               	movlw	1
  1369  0185  07C0               	addwf	_timer20ms,f
  1370  0186  1803               	skipnc
  1371  0187  0AC1               	incf	_timer20ms+1,f
  1372  0188  3000               	movlw	0
  1373  0189  07C1               	addwf	_timer20ms+1,f
  1374  018A                     i1l877:	
  1375                           
  1376                           ;WateringSystem.c: 277: }
  1377                           ;WateringSystem.c: 280: if(INTF){
  1378  018A  188B               	btfsc	11,1	;volatile
  1379                           
  1380                           ;WateringSystem.c: 297: }
  1381                           ;WateringSystem.c: 303: INTF = 0;
  1382                           
  1383                           ;WateringSystem.c: 293: }
  1384                           ;WateringSystem.c: 295: if(RB4){
  1385                           
  1386                           ;WateringSystem.c: 289: }
  1387                           ;WateringSystem.c: 291: if(RB3){
  1388                           
  1389                           ;WateringSystem.c: 285: }
  1390                           ;WateringSystem.c: 287: if(RB2){
  1391                           
  1392                           ;WateringSystem.c: 283: if(RB1){
  1393  018B  108B               	bcf	11,1	;volatile
  1394  018C  087C               	movf	??_ISR+3,w
  1395  018D  00FF               	movwf	127
  1396  018E  087B               	movf	??_ISR+2,w
  1397  018F  008A               	movwf	10
  1398  0190  087A               	movf	??_ISR+1,w
  1399  0191  0084               	movwf	4
  1400  0192  0E79               	swapf	??_ISR^(0+-128),w
  1401  0193  0083               	movwf	3
  1402  0194  0EFE               	swapf	126,f
  1403  0195  0E7E               	swapf	126,w
  1404  0196  0009               	retfie
  1405  0197                     __end_of_ISR:	
  1406  007E                     btemp	set	126	;btemp
  1407  007E                     wtemp0	set	126
  1408                           
  1409                           	psect	intentry
  1410  0004                     __pintentry:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _ISR: [wreg]
  1413                           
  1414  0004                     interrupt_function:	
  1415  007E                     saved_w	set	btemp
  1416  0004  00FE               	movwf	btemp
  1417  0005  0E03               	swapf	3,w
  1418  0006  00F9               	movwf	??_ISR
  1419  0007  0804               	movf	4,w
  1420  0008  00FA               	movwf	??_ISR+1
  1421  0009  080A               	movf	10,w
  1422  000A  00FB               	movwf	??_ISR+2
  1423  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1424  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1425  000D  087F               	movf	btemp+1,w
  1426  000E  00FC               	movwf	??_ISR+3
  1427  000F  120A  118A  2979   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    55
    Data        0
    BSS         55
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      13
    BANK0            80      1      57
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_InitExternal_INT
    _Init1msecTimerInterrupt->_InitTimer0

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
              _HardwareConfiguration
            _Init1msecTimerInterrupt
                   _InitExternal_INT
                         _LedProcess
                  _ProcessMENUStates
              _ProcessWATERINGStates
              _SoftwareConfiguration
                 _UpdateTimeCounters
 ---------------------------------------------------------------------------------
 (1) _UpdateTimeCounters                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SoftwareConfiguration                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessWATERINGStates                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessMENUStates                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedProcess                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitExternal_INT                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init1msecTimerInterrupt                              0     0      0       0
                         _InitTimer0
 ---------------------------------------------------------------------------------
 (2) _InitTimer0                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _HardwareConfiguration                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HardwareConfiguration
   _Init1msecTimerInterrupt
     _InitTimer0
   _InitExternal_INT
   _LedProcess
   _ProcessMENUStates
   _ProcessWATERINGStates
   _SoftwareConfiguration
   _UpdateTimeCounters

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      46       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1      39       5       71.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      46      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Sep 29 13:24:30 2017

                               pc 0002                       __CFG_CP$OFF 0000                                _Z1 0038  
                              _Z2 0030                                _Z3 0028                                _Z4 0020  
                              fsr 0004                               l134 0198                               l146 01B2  
                             l138 01A6                               l951 007F                               l937 019B  
                             l963 009B                               l957 008C                               l991 006A  
                             l983 0056                               l975 003C                               l969 00AA  
                             _GIE 005F                               _RB1 0031                               _RB2 0032  
                             _RB3 0033                               _RD0 0040                               _RB4 0034  
                             _RD1 0041                               _RD2 0042                               _RD3 0043  
                             _RD4 0044                               u410 0132                               u430 013B  
                             u424 0135                               u450 0144                      __CFG_CPD$OFF 0000  
                             u444 013E                               _ISR 0179                               u470 014D  
                             u464 0147                               u490 0156                               u484 0150  
                             fsr0 0004                               indf 0000                      __CFG_FOSC$HS 0000  
                    __CFG_LVP$OFF 0000                              ?_ISR 0079                              _T0IE 005D  
                            _T0IF 005A                              _INTF 0059                              _TMR0 0001  
                    __CFG_WRT$OFF 0000                              _main 0028                              btemp 007E  
                   __CFG_BOREN$ON 0000                              start 0012                 ?_InitExternal_INT 0079  
                           ??_ISR 0079                ??_InitExternal_INT 0058             _ProcessWATERINGStates 0197  
                           ?_main 0079                     __CFG_WDTE$OFF 0000                             i1l877 018A  
                      _LedProcess 012A                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             pclath 000A    __size_of_SoftwareConfiguration 003B  
   __end_of_SoftwareConfiguration 012A  __size_of_Init1msecTimerInterrupt 0004                             status 0003  
                           wtemp0 007E                   __initialization 0015                        _InitTimer0 01B3  
                    __end_of_main 0070                            ??_main 0059                _MENU_CONFIGURACOES 00D8  
         ??_HardwareConfiguration 0058                 __end_of_MENU_HORA 00EA                 __end_of_MENU_ZONA 00EF  
                   _MENU_HUMIDADE 00B8                            _LED_Z1 0054                            _LED_Z2 0052  
                          _LED_Z3 0050                            _LED_Z4 004E                            _LED_ON 0056  
                          _INTCON 000B                    __CFG_PWRTE$OFF 0000            ?_ProcessWATERINGStates 0079  
                     ?_LedProcess 0079                            saved_w 007E        __end_of_UpdateTimeCounters 00B2  
         __end_of__initialization 0024                       ?_InitTimer0 0079                    __pcstackCOMMON 0079  
                      _dayCounter 0042           _Init1msecTimerInterrupt 01D0                        __pbssBANK0 0020  
             __size_of_LedProcess 0030                        __pmaintext 0028                __end_of_MENU_LIGAR 00D1  
                      __pintentry 0004              __end_of_MENU_DURACAO 00CA         __size_of_InitExternal_INT 000A  
             __size_of_InitTimer0 000B                        __stringtab 00B2                        _minCounter 0070  
                      _menuSTATES 0076                        _secCounter 0072                           __ptext1 0070  
                         __ptext2 00EF                           __ptext3 0197                           __ptext4 01A7  
                         __ptext5 012A                           __ptext6 01BE                           __ptext7 01D0  
                         __ptext8 01B3                           __ptext9 015A                      __size_of_ISR 001E  
       ??_Init1msecTimerInterrupt 0059    __size_of_HardwareConfiguration 001F                           clrloop0 01C9  
   __end_of_HardwareConfiguration 0179              end_of_initialization 0024                         _MENU_HORA 00E5  
                       _MENU_ZONA 00EA             _SoftwareConfiguration 00EF           ??_ProcessWATERINGStates 0058  
                    ??_LedProcess 0058                _UpdateTimeCounters 0070                __end_of_LedProcess 015A  
                    ??_InitTimer0 0058               ?_UpdateTimeCounters 0079               start_initialization 0015  
                _InitExternal_INT 01BE                       __end_of_ISR 0197              ??_UpdateTimeCounters 0058  
              __end_of_InitTimer0 01BE                      _MENU_DURACAO 00C1            ?_SoftwareConfiguration 0079  
                     __pbssCOMMON 0070                         ___latbits 0002                     __pcstackBANK0 0058  
                       __pnvBANK0 004E                         _hrCounter 0044               __end_of_MENU_MANUAL 00D8  
             __end_of_MENU_ESTADO 00E5                         __pstrings 00B2                         _msCounter 0074  
           __end_of_MENU_HUMIDADE 00C1                 _ProcessMENUStates 01A7                ?_ProcessMENUStates 0079  
               interrupt_function 0004                         clear_ram0 01C8                         _timer20ms 0040  
             ??_ProcessMENUStates 0058    __size_of_ProcessWATERINGStates 0010     __end_of_ProcessWATERINGStates 01A7  
                        _STATE_Z1 004C                          _STATE_Z2 004A                          _STATE_Z3 0048  
                        _STATE_Z4 0046                       __stringbase 00B7         __end_of_ProcessMENUStates 01B3  
           _HardwareConfiguration 015A                       _MENU_MANUAL 00D1                       _MENU_ESTADO 00DF  
        __end_of_InitExternal_INT 01C8                __end_of__stringtab 00B8          ?_Init1msecTimerInterrupt 0079  
                        _bootDONE 0078                          __ptext10 0179           ??_SoftwareConfiguration 0058  
                   __size_of_main 0048        __end_of_MENU_CONFIGURACOES 00DF                    _wateringSTATES 0077  
                      _MENU_LIGAR 00CA        __size_of_ProcessMENUStates 000C       __size_of_UpdateTimeCounters 0042  
          ?_HardwareConfiguration 0079                          intlevel1 0000                         stringcode 00B2  
 __end_of_Init1msecTimerInterrupt 01D4                        _OPTION_REG 0081                          stringdir 00B2  
                        stringtab 00B2  
